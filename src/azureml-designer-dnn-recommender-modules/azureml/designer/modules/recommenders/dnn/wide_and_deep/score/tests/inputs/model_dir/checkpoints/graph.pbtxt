node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond"
  op: "If"
  input: "global_step/VarIsInitializedOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "global_step_cond_false_7"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "global_step_cond_true_6"
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Identity"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 1000
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 250
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 10
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "enqueue_input/Placeholder"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_1"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_2"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_3"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_4"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_5"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_6"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_7"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_8"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_9"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_10"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "enqueue_input/Placeholder"
  input: "enqueue_input/Placeholder_1"
  input: "enqueue_input/Placeholder_2"
  input: "enqueue_input/Placeholder_3"
  input: "enqueue_input/Placeholder_4"
  input: "enqueue_input/Placeholder_5"
  input: "enqueue_input/Placeholder_6"
  input: "enqueue_input/Placeholder_7"
  input: "enqueue_input/Placeholder_8"
  input: "enqueue_input/Placeholder_9"
  input: "enqueue_input/Placeholder_10"
  device: "/device:CPU:0"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "enqueue_input/random_shuffle_queue"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/sub/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "enqueue_input/sub"
  op: "Sub"
  input: "enqueue_input/random_shuffle_queue_Size"
  input: "enqueue_input/sub/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum"
  op: "Maximum"
  input: "enqueue_input/Maximum/x"
  input: "enqueue_input/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Cast"
  op: "Cast"
  input: "enqueue_input/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/mul/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0013333333190530539
      }
    }
  }
}
node {
  name: "enqueue_input/mul"
  op: "Mul"
  input: "enqueue_input/Cast"
  input: "enqueue_input/mul/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  op: "ScalarSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  input: "enqueue_input/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueUpTo/n"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueUpTo"
  op: "QueueDequeueUpToV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "random_shuffle_queue_DequeueUpTo/n"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/Cast"
  op: "Cast"
  input: "random_shuffle_queue_DequeueUpTo:7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/Cast_1"
  op: "Cast"
  input: "random_shuffle_queue_DequeueUpTo:2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/Cast_2"
  op: "Cast"
  input: "random_shuffle_queue_DequeueUpTo:8"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/Cast_3"
  op: "Cast"
  input: "random_shuffle_queue_DequeueUpTo:3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\201\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 44
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/mul"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 129
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Assign"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\213\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 54
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/mul"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 139
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Assign"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/mul"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Assign"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 74
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/mul"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Assign"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 84
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/mul"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Assign"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueUpTo:6"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 128
          }
        }
        string_val: "132925"
        string_val: "132921"
        string_val: "132922"
        string_val: "132626"
        string_val: "132564"
        string_val: "132665"
        string_val: "135082"
        string_val: "132869"
        string_val: "132847"
        string_val: "132830"
        string_val: "135070"
        string_val: "132851"
        string_val: "132845"
        string_val: "135108"
        string_val: "132854"
        string_val: "135054"
        string_val: "135071"
        string_val: "132583"
        string_val: "134992"
        string_val: "135021"
        string_val: "134987"
        string_val: "134983"
        string_val: "135001"
        string_val: "132768"
        string_val: "135045"
        string_val: "132846"
        string_val: "135026"
        string_val: "135032"
        string_val: "135085"
        string_val: "135038"
        string_val: "135057"
        string_val: "132858"
        string_val: "135069"
        string_val: "132866"
        string_val: "135066"
        string_val: "135041"
        string_val: "135028"
        string_val: "132862"
        string_val: "135042"
        string_val: "135052"
        string_val: "135047"
        string_val: "135064"
        string_val: "132834"
        string_val: "135106"
        string_val: "135062"
        string_val: "135079"
        string_val: "132754"
        string_val: "135039"
        string_val: "132856"
        string_val: "135030"
        string_val: "132572"
        string_val: "135086"
        string_val: "135074"
        string_val: "132723"
        string_val: "135058"
        string_val: "135046"
        string_val: "135075"
        string_val: "134999"
        string_val: "135013"
        string_val: "132767"
        string_val: "132825"
        string_val: "135060"
        string_val: "135027"
        string_val: "132937"
        string_val: "132872"
        string_val: "132875"
        string_val: "132951"
        string_val: "134996"
        string_val: "135011"
        string_val: "134976"
        string_val: "135019"
        string_val: "135065"
        string_val: "135053"
        string_val: "132732"
        string_val: "135104"
        string_val: "132733"
        string_val: "132560"
        string_val: "132630"
        string_val: "132584"
        string_val: "135063"
        string_val: "135025"
        string_val: "135016"
        string_val: "135109"
        string_val: "135088"
        string_val: "134986"
        string_val: "135018"
        string_val: "135073"
        string_val: "135051"
        string_val: "132955"
        string_val: "132958"
        string_val: "132861"
        string_val: "135049"
        string_val: "132954"
        string_val: "135034"
        string_val: "132884"
        string_val: "135059"
        string_val: "135080"
        string_val: "132740"
        string_val: "132609"
        string_val: "132608"
        string_val: "132594"
        string_val: "134975"
        string_val: "135076"
        string_val: "132654"
        string_val: "132561"
        string_val: "132706"
        string_val: "132663"
        string_val: "132660"
        string_val: "132667"
        string_val: "135035"
        string_val: "135048"
        string_val: "135050"
        string_val: "135081"
        string_val: "132885"
        string_val: "135055"
        string_val: "135043"
        string_val: "135072"
        string_val: "135044"
        string_val: "132613"
        string_val: "135000"
        string_val: "132668"
        string_val: "132715"
        string_val: "132755"
        string_val: "132877"
        string_val: "132870"
        string_val: "132717"
        string_val: "135040"
        string_val: "135033"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_24bfea86-97b7-4ad1-8717-8532b4f74459"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/hash_bucket"
  op: "StringToHashBucketFast"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  op: "LookupTableSizeV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/hash_table/hash_table"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/hash_bucket"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/hash_table/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/SelectV2"
  op: "SelectV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice/begin"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Prod"
  op: "Prod"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2/indices"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Cast/x"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Prod"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseReshape"
  op: "SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseReshape/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/hash_table_Lookup/SelectV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Where"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2_1"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2_2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/GatherV2_2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  op: "ResourceGather"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  op: "Greater"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  op: "Fill"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  op: "Maximum"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  op: "RealDiv"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse"
  op: "SparseSegmentMean"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/stack/0"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Tile"
  op: "Tile"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Tile"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/zeros_like"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Cast_1"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/to_sparse_input/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_1"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Cast_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_1/begin"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_2"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Shape_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_2/begin"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Slice_2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_2"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueUpTo:1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 138
          }
        }
        string_val: "U1138"
        string_val: "U1039"
        string_val: "U1037"
        string_val: "U1118"
        string_val: "U1120"
        string_val: "U1008"
        string_val: "U1106"
        string_val: "U1108"
        string_val: "U1110"
        string_val: "U1077"
        string_val: "U1027"
        string_val: "U1093"
        string_val: "U1033"
        string_val: "U1122"
        string_val: "U1067"
        string_val: "U1071"
        string_val: "U1030"
        string_val: "U1101"
        string_val: "U1097"
        string_val: "U1009"
        string_val: "U1073"
        string_val: "U1050"
        string_val: "U1017"
        string_val: "U1010"
        string_val: "U1019"
        string_val: "U1119"
        string_val: "U1129"
        string_val: "U1041"
        string_val: "U1087"
        string_val: "U1007"
        string_val: "U1130"
        string_val: "U1091"
        string_val: "U1061"
        string_val: "U1135"
        string_val: "U1085"
        string_val: "U1034"
        string_val: "U1132"
        string_val: "U1084"
        string_val: "U1046"
        string_val: "U1055"
        string_val: "U1074"
        string_val: "U1014"
        string_val: "U1098"
        string_val: "U1076"
        string_val: "U1028"
        string_val: "U1100"
        string_val: "U1021"
        string_val: "U1032"
        string_val: "U1036"
        string_val: "U1003"
        string_val: "U1047"
        string_val: "U1078"
        string_val: "U1020"
        string_val: "U1015"
        string_val: "U1095"
        string_val: "U1096"
        string_val: "U1127"
        string_val: "U1011"
        string_val: "U1066"
        string_val: "U1115"
        string_val: "U1058"
        string_val: "U1128"
        string_val: "U1022"
        string_val: "U1012"
        string_val: "U1113"
        string_val: "U1111"
        string_val: "U1016"
        string_val: "U1065"
        string_val: "U1109"
        string_val: "U1048"
        string_val: "U1117"
        string_val: "U1049"
        string_val: "U1088"
        string_val: "U1062"
        string_val: "U1035"
        string_val: "U1125"
        string_val: "U1013"
        string_val: "U1042"
        string_val: "U1123"
        string_val: "U1086"
        string_val: "U1006"
        string_val: "U1038"
        string_val: "U1053"
        string_val: "U1031"
        string_val: "U1005"
        string_val: "U1060"
        string_val: "U1103"
        string_val: "U1080"
        string_val: "U1136"
        string_val: "U1072"
        string_val: "U1064"
        string_val: "U1052"
        string_val: "U1057"
        string_val: "U1004"
        string_val: "U1121"
        string_val: "U1075"
        string_val: "U1081"
        string_val: "U1001"
        string_val: "U1114"
        string_val: "U1054"
        string_val: "U1068"
        string_val: "U1099"
        string_val: "U1023"
        string_val: "U1025"
        string_val: "U1044"
        string_val: "U1131"
        string_val: "U1024"
        string_val: "U1104"
        string_val: "U1092"
        string_val: "U1056"
        string_val: "U1133"
        string_val: "U1105"
        string_val: "U1018"
        string_val: "U1082"
        string_val: "U1094"
        string_val: "U1069"
        string_val: "U1124"
        string_val: "U1043"
        string_val: "U1079"
        string_val: "U1045"
        string_val: "U1090"
        string_val: "U1137"
        string_val: "U1029"
        string_val: "U1026"
        string_val: "U1112"
        string_val: "U1134"
        string_val: "U1126"
        string_val: "U1070"
        string_val: "U1102"
        string_val: "U1059"
        string_val: "U1107"
        string_val: "U1002"
        string_val: "U1040"
        string_val: "U1083"
        string_val: "U1089"
        string_val: "U1063"
        string_val: "U1051"
        string_val: "U1116"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 138
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_1c71dcfb-1d57-4792-bb26-64bd8f4715d3"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/hash_bucket"
  op: "StringToHashBucketFast"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  op: "LookupTableSizeV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/hash_table/hash_table"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/hash_bucket"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/hash_table/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/SelectV2"
  op: "SelectV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice/begin"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Prod"
  op: "Prod"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2/indices"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Cast/x"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Prod"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseReshape"
  op: "SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseReshape/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/hash_table_Lookup/SelectV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Where"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2_1"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2_2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/GatherV2_2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  op: "ResourceGather"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  op: "Greater"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  op: "Fill"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  op: "Maximum"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  op: "RealDiv"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse"
  op: "SparseSegmentMean"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/stack/0"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Tile"
  op: "Tile"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Tile"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/zeros_like"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Cast_1"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/to_sparse_input/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_1"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Cast_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_1/begin"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_2"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Shape_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_2/begin"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Slice_2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_2"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueUpTo:4"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 5
          }
        }
        string_val: "variety"
        string_val: "technology"
        string_val: "none"
        string_val: "retro"
        string_val: "eco-friendly"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_884db7d5-ff86-43b4-b200-8a8883a57bc9"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/hash_bucket"
  op: "StringToHashBucketFast"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  op: "LookupTableSizeV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/hash_table/hash_table"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/hash_bucket"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/hash_table/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/SelectV2"
  op: "SelectV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice/begin"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Prod"
  op: "Prod"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2/indices"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Cast/x"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Prod"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseReshape"
  op: "SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseReshape/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/hash_table_Lookup/SelectV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Where"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2_1"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2_2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/GatherV2_2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  op: "ResourceGather"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  op: "Greater"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  op: "Fill"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  op: "Maximum"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  op: "RealDiv"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse"
  op: "SparseSegmentMean"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/stack/0"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Tile"
  op: "Tile"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Tile"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/zeros_like"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Cast_1"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/to_sparse_input/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_1"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Cast_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_1/begin"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_2"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Shape_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_2/begin"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Slice_2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_2"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/ExpandDims"
  op: "ExpandDims"
  input: "dnn/Cast"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/Shape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/ExpandDims"
  op: "ExpandDims"
  input: "dnn/Cast_1"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/Shape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/ExpandDims"
  op: "ExpandDims"
  input: "dnn/Cast_2"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/Shape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/ExpandDims"
  op: "ExpandDims"
  input: "dnn/Cast_3"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/Shape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueUpTo:5"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 4
          }
        }
        string_val: "thrifty-protector"
        string_val: "hunter-ostentatious"
        string_val: "hard-worker"
        string_val: "conformist"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_f4034e13-9c85-44ef-831a-39f2399071c7"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/hash_bucket"
  op: "StringToHashBucketFast"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  op: "LookupTableSizeV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/hash_table/hash_table"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/hash_bucket"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/hash_table/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/SelectV2"
  op: "SelectV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice/begin"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Prod"
  op: "Prod"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2/indices"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Cast/x"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Prod"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseReshape"
  op: "SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseReshape/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/hash_table_Lookup/SelectV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Where"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2_1"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2_2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/GatherV2_2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  op: "ResourceGather"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  op: "Greater"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  op: "Fill"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  op: "Maximum"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  op: "RealDiv"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse"
  op: "SparseSegmentMean"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/stack/0"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Tile"
  op: "Tile"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Tile"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/zeros_like"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Cast_1"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/to_sparse_input/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_1"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Cast_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_1/begin"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_2"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Shape_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_2/begin"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Slice_2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_2"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueUpTo:9"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/dense_shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: "medium"
        string_val: "low"
        string_val: "high"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_2f70f6a9-3f32-447e-8f3c-430483334eda"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/hash_bucket"
  op: "StringToHashBucketFast"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  op: "LookupTableSizeV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/hash_table/hash_table"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/Add"
  op: "Add"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/hash_bucket"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/hash_table/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/SelectV2"
  op: "SelectV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice/begin"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Prod"
  op: "Prod"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2/indices"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Cast/x"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Prod"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseReshape"
  op: "SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseReshape/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/hash_table_Lookup/SelectV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Where"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Where"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2_1"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseReshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2_2"
  op: "GatherV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseReshape/Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/GatherV2_2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  op: "ResourceGather"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  op: "Greater"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  op: "Fill"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.8284270763397217
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  op: "Maximum"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  op: "RealDiv"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  op: "Identity"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse"
  op: "SparseSegmentMean"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/stack"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/stack/0"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Tile"
  op: "Tile"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Tile"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/zeros_like"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Cast_1"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/to_sparse_input/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_1"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Cast_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_1/begin"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_2"
  op: "Slice"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Shape_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_2/begin"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Slice_2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_2"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/concat/axis"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2357022613286972
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2357022613286972
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 651
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_0/kernel"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/kernel"
  input: "dnn/hiddenlayer_0/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_0/bias"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/bias"
  input: "dnn/hiddenlayer_0/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "dnn/hiddenlayer_0/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/dropout/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 673
    }
  }
}
node {
  name: "dnn/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "dnn/dropout/dropout/random_uniform/max"
  input: "dnn/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "dnn/dropout/dropout/random_uniform/RandomUniform"
  input: "dnn/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/random_uniform"
  op: "Add"
  input: "dnn/dropout/dropout/random_uniform/mul"
  input: "dnn/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/sub"
  op: "Sub"
  input: "dnn/dropout/dropout/sub/x"
  input: "dnn/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/truediv"
  op: "RealDiv"
  input: "dnn/dropout/dropout/truediv/x"
  input: "dnn/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/dropout/dropout/random_uniform"
  input: "dnn/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/Relu"
  input: "dnn/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/Cast"
  op: "Cast"
  input: "dnn/dropout/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout/dropout/mul_1"
  op: "Mul"
  input: "dnn/dropout/dropout/mul"
  input: "dnn/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_0/batchnorm_0/gamma"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/gamma/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_0/batchnorm_0/beta"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/beta/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/LogicalAnd"
  op: "LogicalAnd"
  input: "dnn/hiddenlayer_0/batchnorm_0/LogicalAnd/x"
  input: "dnn/hiddenlayer_0/batchnorm_0/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moments/mean"
  op: "Mean"
  input: "dnn/dropout/dropout/mul_1"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moments/StopGradient"
  op: "StopGradient"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dnn/dropout/dropout/mul_1"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moments/variance"
  op: "Mean"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze"
  op: "Squeeze"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_1"
  op: "Squeeze"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/sub"
  input: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  input: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  input: "^dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/sub"
  input: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  input: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  input: "^dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add"
  op: "AddV2"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_1"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/Rsqrt"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1"
  op: "Mul"
  input: "dnn/dropout/dropout/mul_1"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_2"
  op: "Mul"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1"
  op: "AddV2"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Size"
  op: "Size"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction/Size"
  input: "dnn/zero_fraction/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond"
  op: "StatelessIf"
  input: "dnn/zero_fraction/LessEqual"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "dnn_zero_fraction_cond_false_766"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "dnn_zero_fraction_cond_true_765"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Identity"
  op: "Identity"
  input: "dnn/zero_fraction/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Identity_1"
  op: "Identity"
  input: "dnn/zero_fraction/cond:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Identity_2"
  op: "Identity"
  input: "dnn/zero_fraction/cond:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Identity_3"
  op: "Identity"
  input: "dnn/zero_fraction/cond:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Identity_4"
  op: "Identity"
  input: "dnn/zero_fraction/cond:4"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Identity_5"
  op: "Identity"
  input: "dnn/zero_fraction/cond:5"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction/Size"
  input: "dnn/zero_fraction/cond/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction/counts_to_fraction/Cast"
  input: "dnn/zero_fraction/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/fraction"
  op: "Identity"
  input: "dnn/zero_fraction/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_0/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0/activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_0/activation/tag"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 760
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_1/kernel"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/kernel"
  input: "dnn/hiddenlayer_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_1/bias"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/bias"
  input: "dnn/hiddenlayer_1/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1"
  input: "dnn/hiddenlayer_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/dropout_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 782
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "dnn/dropout_1/dropout/random_uniform/max"
  input: "dnn/dropout_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "dnn/dropout_1/dropout/random_uniform/RandomUniform"
  input: "dnn/dropout_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/random_uniform"
  op: "Add"
  input: "dnn/dropout_1/dropout/random_uniform/mul"
  input: "dnn/dropout_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/sub"
  op: "Sub"
  input: "dnn/dropout_1/dropout/sub/x"
  input: "dnn/dropout_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/truediv"
  op: "RealDiv"
  input: "dnn/dropout_1/dropout/truediv/x"
  input: "dnn/dropout_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/dropout_1/dropout/random_uniform"
  input: "dnn/dropout_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/Relu"
  input: "dnn/dropout_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/Cast"
  op: "Cast"
  input: "dnn/dropout_1/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_1/dropout/mul_1"
  op: "Mul"
  input: "dnn/dropout_1/dropout/mul"
  input: "dnn/dropout_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_1/batchnorm_1/gamma"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/gamma/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_1/batchnorm_1/beta"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/beta/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/LogicalAnd"
  op: "LogicalAnd"
  input: "dnn/hiddenlayer_1/batchnorm_1/LogicalAnd/x"
  input: "dnn/hiddenlayer_1/batchnorm_1/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moments/mean"
  op: "Mean"
  input: "dnn/dropout_1/dropout/mul_1"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moments/StopGradient"
  op: "StopGradient"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dnn/dropout_1/dropout/mul_1"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moments/variance"
  op: "Mean"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze"
  op: "Squeeze"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_1"
  op: "Squeeze"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/sub"
  input: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  input: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  input: "^dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/sub"
  input: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  input: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  input: "^dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add"
  op: "AddV2"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_1"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/Rsqrt"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1"
  op: "Mul"
  input: "dnn/dropout_1/dropout/mul_1"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_2"
  op: "Mul"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1"
  op: "AddV2"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Size"
  op: "Size"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction_1/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_1/Size"
  input: "dnn/zero_fraction_1/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond"
  op: "StatelessIf"
  input: "dnn/zero_fraction_1/LessEqual"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "dnn_zero_fraction_1_cond_false_899"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "dnn_zero_fraction_1_cond_true_898"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Identity"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Identity_1"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Identity_2"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Identity_3"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Identity_4"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond:4"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Identity_5"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond:5"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_1/Size"
  input: "dnn/zero_fraction_1/cond/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_1/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_1/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_1/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_1/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1/activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_1/activation/tag"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 869
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_2/kernel"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/kernel"
  input: "dnn/hiddenlayer_2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_2/bias"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/bias"
  input: "dnn/hiddenlayer_2/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1"
  input: "dnn/hiddenlayer_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_2/MatMul"
  input: "dnn/hiddenlayer_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/dropout_2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 891
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/random_uniform/sub"
  op: "Sub"
  input: "dnn/dropout_2/dropout/random_uniform/max"
  input: "dnn/dropout_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/random_uniform/mul"
  op: "Mul"
  input: "dnn/dropout_2/dropout/random_uniform/RandomUniform"
  input: "dnn/dropout_2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/random_uniform"
  op: "Add"
  input: "dnn/dropout_2/dropout/random_uniform/mul"
  input: "dnn/dropout_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/sub"
  op: "Sub"
  input: "dnn/dropout_2/dropout/sub/x"
  input: "dnn/dropout_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/truediv"
  op: "RealDiv"
  input: "dnn/dropout_2/dropout/truediv/x"
  input: "dnn/dropout_2/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/dropout_2/dropout/random_uniform"
  input: "dnn/dropout_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/Relu"
  input: "dnn/dropout_2/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/Cast"
  op: "Cast"
  input: "dnn/dropout_2/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/dropout_2/dropout/mul_1"
  op: "Mul"
  input: "dnn/dropout_2/dropout/mul"
  input: "dnn/dropout_2/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_2/batchnorm_2/gamma"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/gamma/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_2/batchnorm_2/beta"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/beta/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/LogicalAnd/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/LogicalAnd/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/LogicalAnd"
  op: "LogicalAnd"
  input: "dnn/hiddenlayer_2/batchnorm_2/LogicalAnd/x"
  input: "dnn/hiddenlayer_2/batchnorm_2/LogicalAnd/y"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moments/mean"
  op: "Mean"
  input: "dnn/dropout_2/dropout/mul_1"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moments/StopGradient"
  op: "StopGradient"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "dnn/dropout_2/dropout/mul_1"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moments/variance"
  op: "Mean"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze"
  op: "Squeeze"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_1"
  op: "Squeeze"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/sub"
  input: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  input: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  input: "^dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/sub"
  input: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  input: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  input: "^dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add"
  op: "AddV2"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_1"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/Rsqrt"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1"
  op: "Mul"
  input: "dnn/dropout_2/dropout/mul_1"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_2"
  op: "Mul"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1"
  op: "AddV2"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Size"
  op: "Size"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction_2/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_2/Size"
  input: "dnn/zero_fraction_2/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond"
  op: "StatelessIf"
  input: "dnn/zero_fraction_2/LessEqual"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "dnn_zero_fraction_2_cond_false_1032"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "dnn_zero_fraction_2_cond_true_1031"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Identity"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Identity_1"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Identity_2"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Identity_3"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Identity_4"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond:4"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Identity_5"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond:5"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_2/Size"
  input: "dnn/zero_fraction_2/cond/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_2/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_2/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_2/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_2/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_2/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_2/activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_2/activation/tag"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10814761370420456
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10814761370420456
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 978
    }
  }
}
node {
  name: "dnn/logits/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/kernel/Initializer/random_uniform/max"
  input: "dnn/logits/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/kernel/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/kernel/Initializer/random_uniform/mul"
  input: "dnn/logits/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/logits/kernel"
    }
  }
}
node {
  name: "dnn/logits/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/kernel/Assign"
  op: "AssignVariableOp"
  input: "dnn/logits/kernel"
  input: "dnn/logits/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dnn/logits/bias"
    }
  }
}
node {
  name: "dnn/logits/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dnn/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/bias/Assign"
  op: "AssignVariableOp"
  input: "dnn/logits/bias"
  input: "dnn/logits/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1"
  input: "dnn/logits/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dnn/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Size"
  op: "Size"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/zero_fraction_3/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_3/Size"
  input: "dnn/zero_fraction_3/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond"
  op: "StatelessIf"
  input: "dnn/zero_fraction_3/LessEqual"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "dnn_zero_fraction_3_cond_false_1101"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "dnn_zero_fraction_3_cond_true_1100"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Identity"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Identity_1"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Identity_2"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Identity_3"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Identity_4"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond:4"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Identity_5"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond:5"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_3/Size"
  input: "dnn/zero_fraction_3/cond/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_3/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_3/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_3/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/logits/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/logits/fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_3/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits/activation"
      }
    }
  }
}
node {
  name: "dnn/logits/activation"
  op: "HistogramSummary"
  input: "dnn/logits/activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast"
  op: "Cast"
  input: "random_shuffle_queue_DequeueUpTo:7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_1"
  op: "Cast"
  input: "random_shuffle_queue_DequeueUpTo:2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_2"
  op: "Cast"
  input: "random_shuffle_queue_DequeueUpTo:8"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Cast_3"
  op: "Cast"
  input: "random_shuffle_queue_DequeueUpTo:3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Item/weights/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 129
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/Item/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 129
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/Item/weights"
    }
  }
}
node {
  name: "linear/linear_model/Item/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/Item/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Item/weights/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/Item/weights"
  input: "linear/linear_model/Item/weights/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/Item/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/Item/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/Item_X_User/weights/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/Item_X_User/weights/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/Item_X_User/weights/Initializer/zeros"
  op: "Fill"
  input: "linear/linear_model/Item_X_User/weights/Initializer/zeros/shape_as_tensor"
  input: "linear/linear_model/Item_X_User/weights/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/Item_X_User/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/Item_X_User/weights"
    }
  }
}
node {
  name: "linear/linear_model/Item_X_User/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/Item_X_User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/Item_X_User/weights/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/Item_X_User/weights"
  input: "linear/linear_model/Item_X_User/weights/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/Item_X_User/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/Item_X_User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/User/weights/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 139
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/User/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 139
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/User/weights"
    }
  }
}
node {
  name: "linear/linear_model/User/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/User/weights/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/User/weights"
  input: "linear/linear_model/User/weights/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/User/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/linear_model/bias_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "linear/linear_model/bias_weights"
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/bias_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/Assign"
  op: "AssignVariableOp"
  input: "linear/linear_model/bias_weights"
  input: "linear/linear_model/bias_weights/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/bias_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/bias_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueUpTo:6"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/ExpandDims"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/indices"
  op: "Where"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/values"
  op: "GatherNd"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/ExpandDims"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/dense_shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 128
          }
        }
        string_val: "132925"
        string_val: "132921"
        string_val: "132922"
        string_val: "132626"
        string_val: "132564"
        string_val: "132665"
        string_val: "135082"
        string_val: "132869"
        string_val: "132847"
        string_val: "132830"
        string_val: "135070"
        string_val: "132851"
        string_val: "132845"
        string_val: "135108"
        string_val: "132854"
        string_val: "135054"
        string_val: "135071"
        string_val: "132583"
        string_val: "134992"
        string_val: "135021"
        string_val: "134987"
        string_val: "134983"
        string_val: "135001"
        string_val: "132768"
        string_val: "135045"
        string_val: "132846"
        string_val: "135026"
        string_val: "135032"
        string_val: "135085"
        string_val: "135038"
        string_val: "135057"
        string_val: "132858"
        string_val: "135069"
        string_val: "132866"
        string_val: "135066"
        string_val: "135041"
        string_val: "135028"
        string_val: "132862"
        string_val: "135042"
        string_val: "135052"
        string_val: "135047"
        string_val: "135064"
        string_val: "132834"
        string_val: "135106"
        string_val: "135062"
        string_val: "135079"
        string_val: "132754"
        string_val: "135039"
        string_val: "132856"
        string_val: "135030"
        string_val: "132572"
        string_val: "135086"
        string_val: "135074"
        string_val: "132723"
        string_val: "135058"
        string_val: "135046"
        string_val: "135075"
        string_val: "134999"
        string_val: "135013"
        string_val: "132767"
        string_val: "132825"
        string_val: "135060"
        string_val: "135027"
        string_val: "132937"
        string_val: "132872"
        string_val: "132875"
        string_val: "132951"
        string_val: "134996"
        string_val: "135011"
        string_val: "134976"
        string_val: "135019"
        string_val: "135065"
        string_val: "135053"
        string_val: "132732"
        string_val: "135104"
        string_val: "132733"
        string_val: "132560"
        string_val: "132630"
        string_val: "132584"
        string_val: "135063"
        string_val: "135025"
        string_val: "135016"
        string_val: "135109"
        string_val: "135088"
        string_val: "134986"
        string_val: "135018"
        string_val: "135073"
        string_val: "135051"
        string_val: "132955"
        string_val: "132958"
        string_val: "132861"
        string_val: "135049"
        string_val: "132954"
        string_val: "135034"
        string_val: "132884"
        string_val: "135059"
        string_val: "135080"
        string_val: "132740"
        string_val: "132609"
        string_val: "132608"
        string_val: "132594"
        string_val: "134975"
        string_val: "135076"
        string_val: "132654"
        string_val: "132561"
        string_val: "132706"
        string_val: "132663"
        string_val: "132660"
        string_val: "132667"
        string_val: "135035"
        string_val: "135048"
        string_val: "135050"
        string_val: "135081"
        string_val: "132885"
        string_val: "135055"
        string_val: "135043"
        string_val: "135072"
        string_val: "135044"
        string_val: "132613"
        string_val: "135000"
        string_val: "132668"
        string_val: "132715"
        string_val: "132755"
        string_val: "132877"
        string_val: "132870"
        string_val: "132717"
        string_val: "135040"
        string_val: "135033"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/range"
  op: "Range"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/range/start"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/Size"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_093dc33a-b5dd-4ab4-9c46-cc8c15e38522"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/hash_table/hash_table"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/Const"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/hash_bucket"
  op: "StringToHashBucketFast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/hash_table/hash_table"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/values"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  op: "LookupTableSizeV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/hash_table/hash_table"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/Add"
  op: "Add"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/hash_bucket"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/NotEqual"
  op: "NotEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/hash_table/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/SelectV2"
  op: "SelectV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/NotEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Shape/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Shape/Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/strided_slice/stack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/strided_slice/stack_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Cast/x/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Cast/x"
  op: "Pack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/strided_slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Cast/x/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/indices"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/dense_shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/Cast"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/SelectV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice"
  op: "Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/SparseReshape:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice/begin"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Prod"
  op: "Prod"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2"
  op: "GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/SparseReshape:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2/indices"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Cast/x"
  op: "Pack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Prod"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/SparseReshape:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/SparseReshape/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseReshape/Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Where"
  op: "Where"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Where"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2_1"
  op: "GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2_2"
  op: "GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseReshape/Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/GatherV2_2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup"
  op: "ResourceGather"
  input: "linear/linear_model/Item/weights"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity_1"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/Unique:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_1"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/strided_slice/stack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/strided_slice/stack_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/stack"
  op: "Pack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/stack/0"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Tile"
  op: "Tile"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/zeros_like"
  op: "ZerosLike"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum"
  op: "Select"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Tile"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/zeros_like"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Cast_1"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/SparseReshape:1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_1"
  op: "Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Cast_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_1/begin"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Shape_1"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_2"
  op: "Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Shape_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_2/begin"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/concat"
  op: "ConcatV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Slice_2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_2"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueUpTo:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/ExpandDims"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/indices"
  op: "Where"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/values"
  op: "GatherNd"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/ExpandDims"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/dense_shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 138
          }
        }
        string_val: "U1138"
        string_val: "U1039"
        string_val: "U1037"
        string_val: "U1118"
        string_val: "U1120"
        string_val: "U1008"
        string_val: "U1106"
        string_val: "U1108"
        string_val: "U1110"
        string_val: "U1077"
        string_val: "U1027"
        string_val: "U1093"
        string_val: "U1033"
        string_val: "U1122"
        string_val: "U1067"
        string_val: "U1071"
        string_val: "U1030"
        string_val: "U1101"
        string_val: "U1097"
        string_val: "U1009"
        string_val: "U1073"
        string_val: "U1050"
        string_val: "U1017"
        string_val: "U1010"
        string_val: "U1019"
        string_val: "U1119"
        string_val: "U1129"
        string_val: "U1041"
        string_val: "U1087"
        string_val: "U1007"
        string_val: "U1130"
        string_val: "U1091"
        string_val: "U1061"
        string_val: "U1135"
        string_val: "U1085"
        string_val: "U1034"
        string_val: "U1132"
        string_val: "U1084"
        string_val: "U1046"
        string_val: "U1055"
        string_val: "U1074"
        string_val: "U1014"
        string_val: "U1098"
        string_val: "U1076"
        string_val: "U1028"
        string_val: "U1100"
        string_val: "U1021"
        string_val: "U1032"
        string_val: "U1036"
        string_val: "U1003"
        string_val: "U1047"
        string_val: "U1078"
        string_val: "U1020"
        string_val: "U1015"
        string_val: "U1095"
        string_val: "U1096"
        string_val: "U1127"
        string_val: "U1011"
        string_val: "U1066"
        string_val: "U1115"
        string_val: "U1058"
        string_val: "U1128"
        string_val: "U1022"
        string_val: "U1012"
        string_val: "U1113"
        string_val: "U1111"
        string_val: "U1016"
        string_val: "U1065"
        string_val: "U1109"
        string_val: "U1048"
        string_val: "U1117"
        string_val: "U1049"
        string_val: "U1088"
        string_val: "U1062"
        string_val: "U1035"
        string_val: "U1125"
        string_val: "U1013"
        string_val: "U1042"
        string_val: "U1123"
        string_val: "U1086"
        string_val: "U1006"
        string_val: "U1038"
        string_val: "U1053"
        string_val: "U1031"
        string_val: "U1005"
        string_val: "U1060"
        string_val: "U1103"
        string_val: "U1080"
        string_val: "U1136"
        string_val: "U1072"
        string_val: "U1064"
        string_val: "U1052"
        string_val: "U1057"
        string_val: "U1004"
        string_val: "U1121"
        string_val: "U1075"
        string_val: "U1081"
        string_val: "U1001"
        string_val: "U1114"
        string_val: "U1054"
        string_val: "U1068"
        string_val: "U1099"
        string_val: "U1023"
        string_val: "U1025"
        string_val: "U1044"
        string_val: "U1131"
        string_val: "U1024"
        string_val: "U1104"
        string_val: "U1092"
        string_val: "U1056"
        string_val: "U1133"
        string_val: "U1105"
        string_val: "U1018"
        string_val: "U1082"
        string_val: "U1094"
        string_val: "U1069"
        string_val: "U1124"
        string_val: "U1043"
        string_val: "U1079"
        string_val: "U1045"
        string_val: "U1090"
        string_val: "U1137"
        string_val: "U1029"
        string_val: "U1026"
        string_val: "U1112"
        string_val: "U1134"
        string_val: "U1126"
        string_val: "U1070"
        string_val: "U1102"
        string_val: "U1059"
        string_val: "U1107"
        string_val: "U1002"
        string_val: "U1040"
        string_val: "U1083"
        string_val: "U1089"
        string_val: "U1063"
        string_val: "U1051"
        string_val: "U1116"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 138
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/range"
  op: "Range"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/range/start"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/Size"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 138
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "hash_table_c8ae5970-3519-4b9b-8c4e-d3c6d7655402"
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/hash_table/hash_table"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/Const"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/hash_bucket"
  op: "StringToHashBucketFast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/hash_table/hash_table"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/values"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  op: "LookupTableSizeV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/hash_table/hash_table"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/Add"
  op: "Add"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/hash_bucket"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/hash_table_Size/LookupTableSizeV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/NotEqual"
  op: "NotEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/hash_table/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/SelectV2"
  op: "SelectV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/NotEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/hash_table_Lookup/LookupTableFindV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/Add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseCross"
  op: "SparseCross"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/indices"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/indices"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/SelectV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/hash_table_Lookup/SelectV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/dense_shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/to_sparse_input/dense_shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dense_types"
    value {
      list {
      }
    }
  }
  attr {
    key: "hash_key"
    value {
      i: 956888297470
    }
  }
  attr {
    key: "hashed_output"
    value {
      b: true
    }
  }
  attr {
    key: "internal_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 1000
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/Shape/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseCross:2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/Shape/Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/strided_slice/stack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/strided_slice/stack_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/Cast/x/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/Cast/x"
  op: "Pack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/strided_slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/Cast/x/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseCross"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseCross:2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/Cast"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseCross:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice"
  op: "Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseReshape:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice/begin"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Prod"
  op: "Prod"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2"
  op: "GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseReshape:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2/indices"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Cast/x"
  op: "Pack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Prod"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseReshape:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseReshape/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseReshape/Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Where"
  op: "Where"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Where"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2_1"
  op: "GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2_2"
  op: "GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseReshape/Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/GatherV2_2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup"
  op: "ResourceGather"
  input: "linear/linear_model/Item_X_User/weights"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity_1"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/Unique:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_1"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/strided_slice/stack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/strided_slice/stack_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/stack"
  op: "Pack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/stack/0"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Tile"
  op: "Tile"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/zeros_like"
  op: "ZerosLike"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum"
  op: "Select"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Tile"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/zeros_like"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Cast_1"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/SparseReshape:1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_1"
  op: "Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Cast_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_1/begin"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Shape_1"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_2"
  op: "Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Shape_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_2/begin"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/concat"
  op: "ConcatV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Slice_2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_2"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/Shape/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/Shape/Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/strided_slice/stack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/strided_slice/stack_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/Cast/x/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/Cast/x"
  op: "Pack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/strided_slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/Cast/x/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/indices"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/to_sparse_input/dense_shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/Cast"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/hash_table_Lookup/SelectV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice"
  op: "Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/SparseReshape:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice/begin"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Prod"
  op: "Prod"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2"
  op: "GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/SparseReshape:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2/indices"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Cast/x"
  op: "Pack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Prod"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/SparseReshape:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Cast/x"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/SparseReshape/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseReshape/Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Where"
  op: "Where"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Where"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2_1"
  op: "GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseReshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2_2"
  op: "GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseReshape/Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2_2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows"
  op: "SparseFillEmptyRows"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/GatherV2_2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup"
  op: "ResourceGather"
  input: "linear/linear_model/User/weights"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity_1"
  op: "Identity"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/Unique:1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_1"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/SparseFillEmptyRows/SparseFillEmptyRows:2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/strided_slice"
  op: "StridedSlice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/strided_slice/stack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/strided_slice/stack_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/stack"
  op: "Pack"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/stack/0"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Tile"
  op: "Tile"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/zeros_like"
  op: "ZerosLike"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum"
  op: "Select"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Tile"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/zeros_like"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Cast_1"
  op: "Cast"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/SparseReshape:1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_1"
  op: "Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Cast_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_1/begin"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Shape_1"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_2"
  op: "Slice"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Shape_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_2/begin"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/concat"
  op: "ConcatV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Slice_2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_2"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum_no_bias"
  op: "AddN"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/bias_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum"
  op: "BiasAdd"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum_no_bias"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/bias_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "ReadVariableOp"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bias/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "bias"
      }
    }
  }
}
node {
  name: "bias"
  op: "ScalarSummary"
  input: "bias/tags"
  input: "strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/total_size/Size/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/Item/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction/total_size/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 129
      }
    }
  }
}
node {
  name: "zero_fraction/total_size/Size_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/Item_X_User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction/total_size/Size_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1000
      }
    }
  }
}
node {
  name: "zero_fraction/total_size/Size_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "linear/linear_model/User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_fraction/total_size/Size_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 139
      }
    }
  }
}
node {
  name: "zero_fraction/total_size/AddN"
  op: "AddN"
  input: "zero_fraction/total_size/Size"
  input: "zero_fraction/total_size/Size_1"
  input: "zero_fraction/total_size/Size_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/Equal"
  op: "Equal"
  input: "zero_fraction/total_size/Size"
  input: "zero_fraction/total_zero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "zero_fraction/total_zero/zero_count"
  op: "If"
  input: "zero_fraction/total_zero/Equal"
  input: "linear/linear_model/Item/weights"
  input: "zero_fraction/total_size/Size"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "zero_fraction_total_zero_zero_count_false_1451"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "zero_fraction_total_zero_zero_count_true_1450"
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/zero_count/Identity"
  op: "Identity"
  input: "zero_fraction/total_zero/zero_count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/Equal_1"
  op: "Equal"
  input: "zero_fraction/total_size/Size_1"
  input: "zero_fraction/total_zero/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "zero_fraction/total_zero/zero_count_1"
  op: "If"
  input: "zero_fraction/total_zero/Equal_1"
  input: "linear/linear_model/Item_X_User/weights"
  input: "zero_fraction/total_size/Size_1"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "zero_fraction_total_zero_zero_count_1_false_1494"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "zero_fraction_total_zero_zero_count_1_true_1493"
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/zero_count_1/Identity"
  op: "Identity"
  input: "zero_fraction/total_zero/zero_count_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/Equal_2"
  op: "Equal"
  input: "zero_fraction/total_size/Size_2"
  input: "zero_fraction/total_zero/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "zero_fraction/total_zero/zero_count_2"
  op: "If"
  input: "zero_fraction/total_zero/Equal_2"
  input: "linear/linear_model/User/weights"
  input: "zero_fraction/total_size/Size_2"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "zero_fraction_total_zero_zero_count_2_false_1537"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "zero_fraction_total_zero_zero_count_2_true_1536"
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/zero_count_2/Identity"
  op: "Identity"
  input: "zero_fraction/total_zero/zero_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/total_zero/AddN"
  op: "AddN"
  input: "zero_fraction/total_zero/zero_count/Identity"
  input: "zero_fraction/total_zero/zero_count_1/Identity"
  input: "zero_fraction/total_zero/zero_count_2/Identity"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/compute/float32_size"
  op: "Cast"
  input: "zero_fraction/total_size/AddN"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/compute/truediv"
  op: "RealDiv"
  input: "zero_fraction/total_zero/AddN"
  input: "zero_fraction/compute/float32_size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction/zero_fraction_or_nan"
  op: "Identity"
  input: "zero_fraction/compute/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fraction_of_zero_weights/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fraction_of_zero_weights"
      }
    }
  }
}
node {
  name: "fraction_of_zero_weights"
  op: "ScalarSummary"
  input: "fraction_of_zero_weights/tags"
  input: "zero_fraction/zero_fraction_or_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Size"
  op: "Size"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "zero_fraction_1/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "zero_fraction_1/LessEqual"
  op: "LessEqual"
  input: "zero_fraction_1/Size"
  input: "zero_fraction_1/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond"
  op: "StatelessIf"
  input: "zero_fraction_1/LessEqual"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "zero_fraction_1_cond_false_1587"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "zero_fraction_1_cond_true_1586"
      }
    }
  }
}
node {
  name: "zero_fraction_1/cond/Identity"
  op: "Identity"
  input: "zero_fraction_1/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/counts_to_fraction/sub"
  op: "Sub"
  input: "zero_fraction_1/Size"
  input: "zero_fraction_1/cond/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/counts_to_fraction/Cast"
  op: "Cast"
  input: "zero_fraction_1/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "zero_fraction_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "zero_fraction_1/counts_to_fraction/Cast"
  input: "zero_fraction_1/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/fraction"
  op: "Identity"
  input: "zero_fraction_1/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "linear/fraction_of_zero_values"
  op: "ScalarSummary"
  input: "linear/fraction_of_zero_values/tags"
  input: "zero_fraction_1/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear/activation"
      }
    }
  }
}
node {
  name: "linear/activation"
  op: "HistogramSummary"
  input: "linear/activation/tag"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "dnn/logits/BiasAdd"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "head/logits/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "head/losses/logits/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/losses/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "head/losses/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "head/losses/labels/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "head/losses/labels/ExpandDims"
  op: "ExpandDims"
  input: "random_shuffle_queue_DequeueUpTo:10"
  input: "head/losses/labels/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "head/losses/labels/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "head/losses/labels/Shape"
  op: "Shape"
  input: "add"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/labels/strided_slice/stack"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/labels/strided_slice/stack_1"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "head/losses/labels/strided_slice/stack_2"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "head/losses/labels/strided_slice"
  op: "StridedSlice"
  input: "head/losses/labels/Shape"
  input: "head/losses/labels/strided_slice/stack"
  input: "head/losses/labels/strided_slice/stack_1"
  input: "head/losses/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "head/losses/labels/concat/values_1"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "head/losses/labels/concat/axis"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/labels/concat"
  op: "ConcatV2"
  input: "head/losses/labels/strided_slice"
  input: "head/losses/labels/concat/values_1"
  input: "head/losses/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/labels/Shape_1"
  op: "Shape"
  input: "head/losses/labels/ExpandDims"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/labels/assert_equal/Equal"
  op: "Equal"
  input: "head/losses/labels/concat"
  input: "head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "head/losses/labels/assert_equal/Const"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal/All"
  op: "All"
  input: "head/losses/labels/assert_equal/Equal"
  input: "head/losses/labels/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "head/losses/labels/assert_equal/Assert/Const"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal/Assert/Assert"
  op: "Assert"
  input: "head/losses/labels/assert_equal/All"
  input: "head/losses/labels/assert_equal/Assert/Assert/data_0"
  input: "head/losses/labels/concat"
  input: "head/losses/labels/assert_equal/Assert/Assert/data_2"
  input: "head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "head/losses/labels"
  op: "Identity"
  input: "head/losses/labels/ExpandDims"
  input: "^head/losses/labels/assert_equal/Assert/Assert"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/ToFloat"
  op: "Cast"
  input: "head/losses/labels"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "add"
  input: "head/losses/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "head/losses/mean_squared_error/Cast/x"
  op: "Const"
  input: "^head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/Mul"
  op: "Mul"
  input: "head/losses/mean_squared_error/SquaredDifference"
  input: "head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "head/losses/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "head/losses/mean_squared_error/Mul"
  input: "^head/losses/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^head/losses/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "head/losses/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "head/losses/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "head/losses/weighted_loss/Cast/x"
  input: "head/losses/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Mul"
  op: "Mul"
  input: "head/losses/mean_squared_error/Mul"
  input: "head/losses/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Sum"
  op: "Sum"
  input: "head/losses/weighted_loss/Mul"
  input: "head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "head/losses/weighted_loss/num_elements"
  op: "Size"
  input: "head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "head/losses/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Sum_1"
  op: "Sum"
  input: "head/losses/weighted_loss/Sum"
  input: "head/losses/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "head/losses/weighted_loss/value"
  op: "DivNoNan"
  input: "head/losses/weighted_loss/Sum_1"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/Shape"
  input: "training/Adadelta/gradients/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Shape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "training/Adadelta/gradients/gradients/Fill"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "head/losses/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Neg"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_1"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/Fill"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/mul"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/value_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Tile"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "head/losses/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "head/losses/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_grad/Tile"
  input: "head/losses/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "head/losses/mean_squared_error/Mul"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape_1"
  op: "Shape"
  input: "head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "head/losses/mean_squared_error/SquaredDifference"
  input: "training/Adadelta/gradients/gradients/head/losses/weighted_loss/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "add"
  input: "head/losses/ToFloat"
  input: "^training/Adadelta/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "head/losses/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/add_grad/Shape"
  op: "Shape"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/add_grad/Shape_1"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/add_grad/Shape"
  input: "training/Adadelta/gradients/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/add_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/add_grad/Sum"
  input: "training/Adadelta/gradients/gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/add_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/add_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/gradients/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/gradients/add_grad/Reshape"
  input: "dnn/logits/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1"
  input: "training/Adadelta/gradients/gradients/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/dropout_2/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Reshape"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/dropout_2/dropout/mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/sub_grad/Neg"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/sub_grad/Neg"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_2_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Reshape_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/AddN"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/AddN"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dnn/hiddenlayer_2/batchnorm_2/batchnorm/Rsqrt"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/BroadcastGradientArgs/s0"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/add"
  op: "AddV2"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/variance/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Shape_3"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Prod_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/scalar"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dnn/dropout_2/dropout/mul_1"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/StopGradient"
  input: "^training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "dnn/dropout_2/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
  op: "Shape"
  input: "dnn/dropout_2/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/add"
  op: "AddV2"
  input: "dnn/hiddenlayer_2/batchnorm_2/moments/mean/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/Squeeze_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "dnn/dropout_2/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Shape_3"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Prod_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_1"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/SquaredDifference_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/dropout_2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/dropout_2/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/AddN_1"
  input: "dnn/dropout_2/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/dropout_2/dropout/mul"
  input: "training/Adadelta/gradients/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dnn/dropout_2/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Reshape"
  input: "dnn/dropout_2/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/hiddenlayer_2/Relu"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_2/dropout/mul_grad/Reshape"
  input: "dnn/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  input: "dnn/hiddenlayer_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/dropout_1/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Reshape"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/dropout_1/dropout/mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/sub_grad/Neg"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/sub_grad/Neg"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_2_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_2"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Reshape_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/AddN_2"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/AddN_2"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dnn/hiddenlayer_1/batchnorm_1/batchnorm/Rsqrt"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/BroadcastGradientArgs/s0"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/add"
  op: "AddV2"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/variance/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Shape_3"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Prod_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/scalar"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dnn/dropout_1/dropout/mul_1"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/StopGradient"
  input: "^training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "dnn/dropout_1/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
  op: "Shape"
  input: "dnn/dropout_1/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/add"
  op: "AddV2"
  input: "dnn/hiddenlayer_1/batchnorm_1/moments/mean/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/Squeeze_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "dnn/dropout_1/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Shape_3"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Prod_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_3"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/SquaredDifference_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/dropout_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/dropout_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/AddN_3"
  input: "dnn/dropout_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/dropout_1/dropout/mul"
  input: "training/Adadelta/gradients/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dnn/dropout_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Reshape"
  input: "dnn/dropout_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/hiddenlayer_1/Relu"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/gradients/dnn/dropout_1/dropout/mul_grad/Reshape"
  input: "dnn/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "dnn/hiddenlayer_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/dropout/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Reshape"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/dropout/dropout/mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/sub_grad/Neg"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/sub_grad/Neg"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_2_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_4"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Reshape_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/AddN_4"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/AddN_4"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "dnn/hiddenlayer_0/batchnorm_0/batchnorm/Rsqrt"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/BroadcastGradientArgs/s0"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/add"
  op: "AddV2"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/variance/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Prod"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Shape_3"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Prod_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Cast"
  op: "Cast"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/scalar"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "dnn/dropout/dropout/mul_1"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/StopGradient"
  input: "^training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "dnn/dropout/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
  op: "Shape"
  input: "dnn/dropout/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/add"
  op: "AddV2"
  input: "dnn/hiddenlayer_0/batchnorm_0/moments/mean/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/Squeeze_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "dnn/dropout/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Prod"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Shape_3"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Prod_1"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Prod"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Cast"
  op: "Cast"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_5"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/SquaredDifference_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/dropout/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/AddN_5"
  input: "dnn/dropout/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/dropout/dropout/mul"
  input: "training/Adadelta/gradients/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dnn/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Reshape"
  input: "dnn/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/hiddenlayer_0/Relu"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/gradients/dnn/dropout/dropout/mul_grad/Reshape"
  input: "dnn/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "dnn/hiddenlayer_0/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 44
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/mod"
  op: "FloorMod"
  input: "dnn/input_from_feature_columns/input_layer/concat/axis"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN"
  op: "ShapeN"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_item_feature_0_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/latitude_user_feature_0_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_item_feature_1_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/longitude_user_feature_1_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:3"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:4"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:5"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:6"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:7"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:8"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice"
  op: "Slice"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_1"
  op: "Slice"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset:1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_2"
  op: "Slice"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset:2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_3"
  op: "Slice"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset:3"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_4"
  op: "Slice"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset:4"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:4"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_5"
  op: "Slice"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset:5"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:5"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_6"
  op: "Slice"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset:6"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:6"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_7"
  op: "Slice"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset:7"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:7"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_8"
  op: "Slice"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ConcatOffset:8"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/ShapeN:8"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_7"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/concat_grad/Slice_8"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Reshape_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/Reshape_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/Reshape_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/Reshape_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/Reshape_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_2_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_2_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_2_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_2_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_2_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  op: "SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights_grad/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/Cast"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  op: "SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights_grad/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/Cast"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  op: "SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights_grad/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/Cast"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  op: "SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights_grad/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/Cast"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  op: "SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights_grad/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/Unique:1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/Cast"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  op: "Neg"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  op: "Neg"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  op: "Neg"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  op: "Neg"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  op: "Neg"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Neg"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse_grad/SparseSegmentMeanGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  op: "Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  op: "Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  op: "Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  op: "Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  op: "Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  op: "Select"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/GreaterEqual"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/zeros"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/truediv_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Maximum_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select_1"
  op: "Select"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Greater"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/zeros_like"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sqrt_grad/SqrtGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_6"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  op: "AddV2"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_6"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_7"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  op: "AddV2"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_7"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_8"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  op: "AddV2"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_8"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_9"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  op: "AddV2"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_9"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_10"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_grad/Select"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  op: "AddV2"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum/reduction_indices"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/add"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/start"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/range"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/mod"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_10"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  op: "Shape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  op: "Mul"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/Identity"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Sum_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_11"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_12"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_13"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_14"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/AddN_15"
  op: "AddN"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup/clip_by_norm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\201\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_11"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\213\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_12"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\006\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_13"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_14"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Const"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/gradients/AddN_15"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/decay"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/decay"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/decay"
    }
  }
}
node {
  name: "training/Adadelta/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/decay/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/decay"
  input: "training/Adadelta/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "training/Adadelta/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/learning_rate"
    }
  }
}
node {
  name: "training/Adadelta/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/learning_rate"
  input: "training/Adadelta/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/rho/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/rho"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079071
      }
    }
  }
}
node {
  name: "training/Adadelta/rho"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/rho"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/rho"
    }
  }
}
node {
  name: "training/Adadelta/rho/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/rho/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/rho"
  input: "training/Adadelta/rho/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/rho/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\201\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 129
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\213\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 139
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/logits/kernel/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_grad"
  input: "training/Adadelta/dnn/logits/kernel/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_grad/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_grad"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/logits/bias/accum_grad"
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_grad/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/bias/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_grad/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/logits/bias/accum_grad"
  input: "training/Adadelta/dnn/logits/bias/accum_grad/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_grad/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/logits/bias/accum_grad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\201\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 129
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\213\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 139
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 44
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Initializer/zeros"
  op: "Fill"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Initializer/zeros/shape_as_tensor"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/logits/kernel/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_var"
  input: "training/Adadelta/dnn/logits/kernel/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/kernel/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_var/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_var"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adadelta/dnn/logits/bias/accum_var"
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_var/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/bias/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_var/Assign"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/logits/bias/accum_var"
  input: "training/Adadelta/dnn/logits/bias/accum_var/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/dnn/logits/bias/accum_var/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/dnn/logits/bias/accum_var"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Identity/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Identity"
  op: "Identity"
  input: "training/Adadelta/Identity/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adadelta/Identity_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adadelta/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Identity_1"
  op: "Identity"
  input: "training/Adadelta/Identity_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Unique"
  op: "Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Shape"
  op: "Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/strided_slice/stack"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/strided_slice/stack_1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Unique:1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  op: "ResourceSparseApplyAdadelta"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/UnsortedSegmentSum"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Unique"
  op: "Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Shape"
  op: "Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/strided_slice/stack"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/strided_slice/stack_1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/User_embedding_1/User_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Unique:1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  op: "ResourceSparseApplyAdadelta"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/UnsortedSegmentSum"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Unique"
  op: "Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Shape"
  op: "Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/strided_slice/stack"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/strided_slice/stack_1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Unique:1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  op: "ResourceSparseApplyAdadelta"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/UnsortedSegmentSum"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Unique"
  op: "Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Shape"
  op: "Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/strided_slice/stack"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/strided_slice/stack_1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Unique:1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  op: "ResourceSparseApplyAdadelta"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/UnsortedSegmentSum"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Unique"
  op: "Unique"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Shape"
  op: "Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/strided_slice"
  op: "StridedSlice"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Shape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/strided_slice/stack"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/strided_slice/stack_1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adadelta/gradients/gradients/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_embedding_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Unique:1"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  op: "ResourceSparseApplyAdadelta"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/UnsortedSegmentSum"
  input: "training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/kernel/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_0/kernel"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/bias/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_0/bias"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/kernel/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_1/kernel"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/bias/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_1/bias"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/kernel/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_2/kernel"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/bias/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_2/bias"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/batchnorm_0/gamma/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/mul_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/batchnorm_0/beta/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_0/batchnorm_0/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/batchnorm_0/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/batchnorm_1/gamma/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/mul_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/batchnorm_1/beta/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_1/batchnorm_1/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/batchnorm_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/batchnorm_2/gamma/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/mul_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/batchnorm_2/beta/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/hiddenlayer_2/batchnorm_2/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/batchnorm_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/logits/kernel/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/logits/kernel"
  input: "training/Adadelta/dnn/logits/kernel/accum_grad"
  input: "training/Adadelta/dnn/logits/kernel/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/logits/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/update_dnn/logits/bias/ResourceApplyAdadelta"
  op: "ResourceApplyAdadelta"
  input: "dnn/logits/bias"
  input: "training/Adadelta/dnn/logits/bias/accum_grad"
  input: "training/Adadelta/dnn/logits/bias/accum_var"
  input: "training/Adadelta/Identity"
  input: "training/Adadelta/Identity_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/gradients/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/Const"
  op: "Const"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/batchnorm_0/beta/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/batchnorm_0/gamma/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/bias/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/kernel/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/batchnorm_1/beta/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/batchnorm_1/gamma/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/bias/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/kernel/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/batchnorm_2/beta/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/batchnorm_2/gamma/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/bias/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/kernel/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/logits/bias/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/logits/kernel/ResourceApplyAdadelta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "global_step"
  input: "training/Adadelta/Adadelta/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adadelta/Adadelta/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^training/Adadelta/Adadelta/AssignAddVariableOp"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/batchnorm_0/beta/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/batchnorm_0/gamma/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/bias/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_0/kernel/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/batchnorm_1/beta/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/batchnorm_1/gamma/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/bias/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_1/kernel/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/batchnorm_2/beta/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/batchnorm_2/gamma/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/bias/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/hiddenlayer_2/kernel/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/ResourceSparseApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/logits/bias/ResourceApplyAdadelta"
  input: "^training/Adadelta/Adadelta/update_dnn/logits/kernel/ResourceApplyAdadelta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/Fill"
  op: "Fill"
  input: "training/Adagrad/gradients/gradients/Shape"
  input: "training/Adagrad/gradients/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Shape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "training/Adagrad/gradients/gradients/Fill"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "head/losses/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Neg"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_1"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "training/Adagrad/gradients/gradients/Fill"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/mul"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Sum_1"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/value_grad/Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Tile"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "head/losses/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "head/losses/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "head/losses/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_grad/Tile"
  input: "head/losses/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "head/losses/mean_squared_error/Mul"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul_1"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Sum_1"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "head/losses/mean_squared_error/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape_1"
  op: "Shape"
  input: "head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Reshape"
  input: "head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "head/losses/mean_squared_error/SquaredDifference"
  input: "training/Adagrad/gradients/gradients/head/losses/weighted_loss/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul_1"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum_1"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "add"
  input: "head/losses/ToFloat"
  input: "^training/Adagrad/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "head/losses/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/add_grad/Shape"
  op: "Shape"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/add_grad/Shape_1"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adagrad/gradients/gradients/add_grad/Shape"
  input: "training/Adagrad/gradients/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/add_grad/Sum"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "training/Adagrad/gradients/gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/add_grad/Sum"
  input: "training/Adagrad/gradients/gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/add_grad/Sum_1"
  op: "Sum"
  input: "training/Adagrad/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "training/Adagrad/gradients/gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/add_grad/Sum_1"
  input: "training/Adagrad/gradients/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adagrad/gradients/gradients/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/add_grad/Reshape_1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/add_grad/Reshape_1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/add_grad/Reshape_1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum_grad/Select"
  op: "Select"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Tile"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_2_grad/Reshape"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum_grad/Select_1"
  op: "Select"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Tile"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum_grad/zeros_like"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum_grad/Select"
  op: "Select"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Tile"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_2_grad/Reshape"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum_grad/Select_1"
  op: "Select"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Tile"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum_grad/zeros_like"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum_grad/Select"
  op: "Select"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Tile"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_2_grad/Reshape"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum_grad/Select_1"
  op: "Select"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Tile"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum_grad/zeros_like"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/Shape"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/GatherV2"
  op: "GatherV2"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum_grad/Select_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/Cast"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/Unique:1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/Shape"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/GatherV2"
  op: "GatherV2"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum_grad/Select_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/Cast"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/Unique:1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/Shape"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/GatherV2"
  op: "GatherV2"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum_grad/Select_1"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/Cast"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/GatherV2"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/Unique:1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\201\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Const"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/Unique"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Const"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/Unique"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\213\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Const"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/Unique"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/iter/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adagrad/iter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/iter"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adagrad/iter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adagrad/iter"
    }
  }
}
node {
  name: "training/Adagrad/iter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/iter"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/iter/Assign"
  op: "AssignVariableOp"
  input: "training/Adagrad/iter"
  input: "training/Adagrad/iter/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adagrad/iter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/iter"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adagrad/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adagrad/decay"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adagrad/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adagrad/decay"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adagrad/decay"
    }
  }
}
node {
  name: "training/Adagrad/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/decay/Assign"
  op: "AssignVariableOp"
  input: "training/Adagrad/decay"
  input: "training/Adagrad/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adagrad/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004999999888241291
      }
    }
  }
}
node {
  name: "training/Adagrad/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adagrad/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adagrad/learning_rate"
    }
  }
}
node {
  name: "training/Adagrad/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "training/Adagrad/learning_rate"
  input: "training/Adagrad/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item/weights/accumulator/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 129
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 129
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item/weights/accumulator/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item/weights/accumulator/Assign"
  op: "AssignVariableOp"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item/weights/accumulator/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 129
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator/Assign"
  op: "AssignVariableOp"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/User/weights/accumulator/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 139
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/User/weights/accumulator"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 139
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adagrad/linear/linear_model/User/weights/accumulator"
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/User/weights/accumulator/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/User/weights/accumulator/Assign"
  op: "AssignVariableOp"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/User/weights/accumulator/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 139
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/bias_weights/accumulator/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/bias_weights/accumulator/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/bias_weights/accumulator/Assign"
  op: "AssignVariableOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/linear/linear_model/bias_weights/accumulator/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Identity/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Identity"
  op: "Identity"
  input: "training/Adagrad/Identity/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adagrad/Neg"
  op: "Neg"
  input: "training/Adagrad/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Unique"
  op: "Unique"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Shape"
  op: "Shape"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/strided_slice"
  op: "StridedSlice"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Shape"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/strided_slice/stack"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/strided_slice/stack_1"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Unique:1"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Square"
  op: "Square"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/ResourceScatterAdd"
  op: "ResourceScatterAdd"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Unique"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Square"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Gather"
  op: "ResourceGather"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Unique"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/ResourceScatterAdd"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Identity"
  op: "Identity"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Gather"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/mul"
  op: "Mul"
  input: "training/Adagrad/Neg"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Sqrt"
  op: "Sqrt"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/add"
  op: "AddV2"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Sqrt"
  input: "training/Adagrad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/truediv"
  op: "RealDiv"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/mul"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/ResourceScatterAdd_1"
  op: "ResourceScatterAdd"
  input: "linear/linear_model/Item/weights"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/Unique"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/truediv"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Unique"
  op: "Unique"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Shape"
  op: "Shape"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/strided_slice"
  op: "StridedSlice"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Shape"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/strided_slice/stack"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/strided_slice/stack_1"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Unique:1"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Square"
  op: "Square"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/ResourceScatterAdd"
  op: "ResourceScatterAdd"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Unique"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Square"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Gather"
  op: "ResourceGather"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Unique"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/ResourceScatterAdd"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Identity"
  op: "Identity"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Gather"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/mul"
  op: "Mul"
  input: "training/Adagrad/Neg"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Sqrt"
  op: "Sqrt"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/add"
  op: "AddV2"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Sqrt"
  input: "training/Adagrad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/truediv"
  op: "RealDiv"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/mul"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/ResourceScatterAdd_1"
  op: "ResourceScatterAdd"
  input: "linear/linear_model/Item_X_User/weights"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/Unique"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/truediv"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/Item_X_User/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Unique"
  op: "Unique"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Shape"
  op: "Shape"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/strided_slice"
  op: "StridedSlice"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Shape"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/strided_slice/stack"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/strided_slice/stack_1"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/User/weighted_sum/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Unique:1"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Square"
  op: "Square"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/ResourceScatterAdd"
  op: "ResourceScatterAdd"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Unique"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Square"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Gather"
  op: "ResourceGather"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Unique"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/User/weights/ResourceScatterAdd"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Identity"
  op: "Identity"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Gather"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/mul"
  op: "Mul"
  input: "training/Adagrad/Neg"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Sqrt"
  op: "Sqrt"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/add"
  op: "AddV2"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Sqrt"
  input: "training/Adagrad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/truediv"
  op: "RealDiv"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/mul"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/ResourceScatterAdd_1"
  op: "ResourceScatterAdd"
  input: "linear/linear_model/User/weights"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/Unique"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/User/weights/truediv"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/User/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/Square"
  op: "Square"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/Square"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/AssignAddVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/mul"
  op: "Mul"
  input: "training/Adagrad/Identity"
  input: "training/Adagrad/gradients/gradients/linear/linear_model/linear/linear_model/linear/linear_model/weighted_sum_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/AssignAddVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/Sqrt"
  op: "Sqrt"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/add"
  op: "AddV2"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/Sqrt"
  input: "training/Adagrad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/truediv"
  op: "RealDiv"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/mul"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "linear/linear_model/bias_weights"
  input: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "linear/linear_model/bias_weights"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/linear_model/bias_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/Const"
  op: "Const"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/ResourceScatterAdd_1"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/ResourceScatterAdd_1"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/User/weights/ResourceScatterAdd_1"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "training/Adagrad/iter"
  input: "training/Adagrad/Adagrad/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adagrad/Adagrad/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adagrad/iter"
  input: "^training/Adagrad/Adagrad/AssignAddVariableOp"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/Item/weights/ResourceScatterAdd_1"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/Item_X_User/weights/ResourceScatterAdd_1"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/User/weights/ResourceScatterAdd_1"
  input: "^training/Adagrad/Adagrad/update_linear/linear_model/bias_weights/AssignSubVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/group_deps"
  op: "NoOp"
  input: "^dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg/AssignSubVariableOp"
  input: "^dnn/hiddenlayer_0/batchnorm_0/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg/AssignSubVariableOp"
  input: "^dnn/hiddenlayer_1/batchnorm_1/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg/AssignSubVariableOp"
  input: "^dnn/hiddenlayer_2/batchnorm_2/AssignMovingAvg_1/AssignSubVariableOp"
  input: "^training/Adadelta/Adadelta/AssignAddVariableOp"
  input: "^training/Adagrad/Adagrad/AssignAddVariableOp"
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "head/losses/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^dnn/hiddenlayer_0/batchnorm_0/beta/Assign"
  input: "^dnn/hiddenlayer_0/batchnorm_0/gamma/Assign"
  input: "^dnn/hiddenlayer_0/batchnorm_0/moving_mean/Assign"
  input: "^dnn/hiddenlayer_0/batchnorm_0/moving_variance/Assign"
  input: "^dnn/hiddenlayer_0/bias/Assign"
  input: "^dnn/hiddenlayer_0/kernel/Assign"
  input: "^dnn/hiddenlayer_1/batchnorm_1/beta/Assign"
  input: "^dnn/hiddenlayer_1/batchnorm_1/gamma/Assign"
  input: "^dnn/hiddenlayer_1/batchnorm_1/moving_mean/Assign"
  input: "^dnn/hiddenlayer_1/batchnorm_1/moving_variance/Assign"
  input: "^dnn/hiddenlayer_1/bias/Assign"
  input: "^dnn/hiddenlayer_1/kernel/Assign"
  input: "^dnn/hiddenlayer_2/batchnorm_2/beta/Assign"
  input: "^dnn/hiddenlayer_2/batchnorm_2/gamma/Assign"
  input: "^dnn/hiddenlayer_2/batchnorm_2/moving_mean/Assign"
  input: "^dnn/hiddenlayer_2/batchnorm_2/moving_variance/Assign"
  input: "^dnn/hiddenlayer_2/bias/Assign"
  input: "^dnn/hiddenlayer_2/kernel/Assign"
  input: "^dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Assign"
  input: "^dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Assign"
  input: "^dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Assign"
  input: "^dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Assign"
  input: "^dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Assign"
  input: "^dnn/logits/bias/Assign"
  input: "^dnn/logits/kernel/Assign"
  input: "^global_step/Assign"
  input: "^linear/linear_model/Item/weights/Assign"
  input: "^linear/linear_model/Item_X_User/weights/Assign"
  input: "^linear/linear_model/User/weights/Assign"
  input: "^linear/linear_model/bias_weights/Assign"
  input: "^training/Adadelta/decay/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_0/bias/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_1/bias/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_2/bias/accum_var/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Assign"
  input: "^training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad/Assign"
  input: "^training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var/Assign"
  input: "^training/Adadelta/dnn/logits/bias/accum_grad/Assign"
  input: "^training/Adadelta/dnn/logits/bias/accum_var/Assign"
  input: "^training/Adadelta/dnn/logits/kernel/accum_grad/Assign"
  input: "^training/Adadelta/dnn/logits/kernel/accum_var/Assign"
  input: "^training/Adadelta/learning_rate/Assign"
  input: "^training/Adadelta/rho/Assign"
  input: "^training/Adagrad/decay/Assign"
  input: "^training/Adagrad/iter/Assign"
  input: "^training/Adagrad/learning_rate/Assign"
  input: "^training/Adagrad/linear/linear_model/Item/weights/accumulator/Assign"
  input: "^training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator/Assign"
  input: "^training/Adagrad/linear/linear_model/User/weights/accumulator/Assign"
  input: "^training/Adagrad/linear/linear_model/bias_weights/accumulator/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "dnn/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "dnn/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/Item/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/Item_X_User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/bias_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/bias/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/bias/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/iter"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  input: "report_uninitialized_variables/VarIsInitializedOp_40"
  input: "report_uninitialized_variables/VarIsInitializedOp_41"
  input: "report_uninitialized_variables/VarIsInitializedOp_42"
  input: "report_uninitialized_variables/VarIsInitializedOp_43"
  input: "report_uninitialized_variables/VarIsInitializedOp_44"
  input: "report_uninitialized_variables/VarIsInitializedOp_45"
  input: "report_uninitialized_variables/VarIsInitializedOp_46"
  input: "report_uninitialized_variables/VarIsInitializedOp_47"
  input: "report_uninitialized_variables/VarIsInitializedOp_48"
  input: "report_uninitialized_variables/VarIsInitializedOp_49"
  input: "report_uninitialized_variables/VarIsInitializedOp_50"
  input: "report_uninitialized_variables/VarIsInitializedOp_51"
  input: "report_uninitialized_variables/VarIsInitializedOp_52"
  input: "report_uninitialized_variables/VarIsInitializedOp_53"
  input: "report_uninitialized_variables/VarIsInitializedOp_54"
  input: "report_uninitialized_variables/VarIsInitializedOp_55"
  input: "report_uninitialized_variables/VarIsInitializedOp_56"
  input: "report_uninitialized_variables/VarIsInitializedOp_57"
  input: "report_uninitialized_variables/VarIsInitializedOp_58"
  input: "report_uninitialized_variables/VarIsInitializedOp_59"
  input: "report_uninitialized_variables/VarIsInitializedOp_60"
  input: "report_uninitialized_variables/VarIsInitializedOp_61"
  input: "report_uninitialized_variables/VarIsInitializedOp_62"
  input: "report_uninitialized_variables/VarIsInitializedOp_63"
  input: "report_uninitialized_variables/VarIsInitializedOp_64"
  input: "report_uninitialized_variables/VarIsInitializedOp_65"
  input: "report_uninitialized_variables/VarIsInitializedOp_66"
  input: "report_uninitialized_variables/VarIsInitializedOp_67"
  input: "report_uninitialized_variables/VarIsInitializedOp_68"
  input: "report_uninitialized_variables/VarIsInitializedOp_69"
  input: "report_uninitialized_variables/VarIsInitializedOp_70"
  input: "report_uninitialized_variables/VarIsInitializedOp_71"
  input: "report_uninitialized_variables/VarIsInitializedOp_72"
  input: "report_uninitialized_variables/VarIsInitializedOp_73"
  input: "report_uninitialized_variables/VarIsInitializedOp_74"
  input: "report_uninitialized_variables/VarIsInitializedOp_75"
  input: "report_uninitialized_variables/VarIsInitializedOp_76"
  input: "report_uninitialized_variables/VarIsInitializedOp_77"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 78
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: "global_step"
        string_val: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
        string_val: "dnn/hiddenlayer_0/kernel"
        string_val: "dnn/hiddenlayer_0/bias"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/gamma"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/beta"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
        string_val: "dnn/hiddenlayer_1/kernel"
        string_val: "dnn/hiddenlayer_1/bias"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/gamma"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/beta"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
        string_val: "dnn/hiddenlayer_2/kernel"
        string_val: "dnn/hiddenlayer_2/bias"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/gamma"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/beta"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
        string_val: "dnn/logits/kernel"
        string_val: "dnn/logits/bias"
        string_val: "linear/linear_model/Item/weights"
        string_val: "linear/linear_model/Item_X_User/weights"
        string_val: "linear/linear_model/User/weights"
        string_val: "linear/linear_model/bias_weights"
        string_val: "training/Adadelta/decay"
        string_val: "training/Adadelta/learning_rate"
        string_val: "training/Adadelta/rho"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
        string_val: "training/Adadelta/dnn/logits/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/logits/bias/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
        string_val: "training/Adadelta/dnn/logits/kernel/accum_var"
        string_val: "training/Adadelta/dnn/logits/bias/accum_var"
        string_val: "training/Adagrad/iter"
        string_val: "training/Adagrad/decay"
        string_val: "training/Adagrad/learning_rate"
        string_val: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/User/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "dnn/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "dnn/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/Item/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/Item_X_User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/User/weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "linear/linear_model/bias_weights"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/bias/accum_grad"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "training/Adadelta/dnn/logits/bias/accum_var"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/iter"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_77"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 78
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: "global_step"
        string_val: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
        string_val: "dnn/hiddenlayer_0/kernel"
        string_val: "dnn/hiddenlayer_0/bias"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/gamma"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/beta"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
        string_val: "dnn/hiddenlayer_1/kernel"
        string_val: "dnn/hiddenlayer_1/bias"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/gamma"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/beta"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
        string_val: "dnn/hiddenlayer_2/kernel"
        string_val: "dnn/hiddenlayer_2/bias"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/gamma"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/beta"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
        string_val: "dnn/logits/kernel"
        string_val: "dnn/logits/bias"
        string_val: "linear/linear_model/Item/weights"
        string_val: "linear/linear_model/Item_X_User/weights"
        string_val: "linear/linear_model/User/weights"
        string_val: "linear/linear_model/bias_weights"
        string_val: "training/Adadelta/decay"
        string_val: "training/Adadelta/learning_rate"
        string_val: "training/Adadelta/rho"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
        string_val: "training/Adadelta/dnn/logits/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/logits/bias/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
        string_val: "training/Adadelta/dnn/logits/kernel/accum_var"
        string_val: "training/Adadelta/dnn/logits/bias/accum_var"
        string_val: "training/Adagrad/iter"
        string_val: "training/Adagrad/decay"
        string_val: "training/Adagrad/learning_rate"
        string_val: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/User/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 78
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^dnn/input_from_feature_columns/input_layer/Item_embedding_1/Item_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^dnn/input_from_feature_columns/input_layer/User_embedding_1/User_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding_1/interest_user_feature_2_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding_1/personality_user_feature_3_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding_1/price_item_feature_2_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^linear/linear_model/linear/linear_model/linear/linear_model/Item/Item_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^linear/linear_model/linear/linear_model/linear/linear_model/Item_X_User/User_lookup/hash_table/table_init/LookupTableImportV2"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  input: "dnn/hiddenlayer_0/fraction_of_zero_values"
  input: "dnn/hiddenlayer_0/activation"
  input: "dnn/hiddenlayer_1/fraction_of_zero_values"
  input: "dnn/hiddenlayer_1/activation"
  input: "dnn/hiddenlayer_2/fraction_of_zero_values"
  input: "dnn/hiddenlayer_2/activation"
  input: "dnn/logits/fraction_of_zero_values"
  input: "dnn/logits/activation"
  input: "bias"
  input: "fraction_of_zero_weights"
  input: "linear/fraction_of_zero_values"
  input: "linear/activation"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_921cb208fbb34fbf896b3de9f579ec9d/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: "dnn/hiddenlayer_0/batchnorm_0/beta"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/gamma"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
        string_val: "dnn/hiddenlayer_0/bias"
        string_val: "dnn/hiddenlayer_0/kernel"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/beta"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/gamma"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
        string_val: "dnn/hiddenlayer_1/bias"
        string_val: "dnn/hiddenlayer_1/kernel"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/beta"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/gamma"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
        string_val: "dnn/hiddenlayer_2/bias"
        string_val: "dnn/hiddenlayer_2/kernel"
        string_val: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
        string_val: "dnn/logits/bias"
        string_val: "dnn/logits/kernel"
        string_val: "global_step"
        string_val: "linear/linear_model/Item/weights"
        string_val: "linear/linear_model/Item_X_User/weights"
        string_val: "linear/linear_model/User/weights"
        string_val: "linear/linear_model/bias_weights"
        string_val: "training/Adadelta/decay"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/logits/bias/accum_grad"
        string_val: "training/Adadelta/dnn/logits/bias/accum_var"
        string_val: "training/Adadelta/dnn/logits/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/logits/kernel/accum_var"
        string_val: "training/Adadelta/learning_rate"
        string_val: "training/Adadelta/rho"
        string_val: "training/Adagrad/decay"
        string_val: "training/Adagrad/iter"
        string_val: "training/Adagrad/learning_rate"
        string_val: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/User/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_0/bias/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_0/kernel/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_1/bias/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_1/kernel/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_2/bias/Read/ReadVariableOp"
  input: "dnn/hiddenlayer_2/kernel/Read/ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/Read/ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/Read/ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/Read/ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/Read/ReadVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/Read/ReadVariableOp"
  input: "dnn/logits/bias/Read/ReadVariableOp"
  input: "dnn/logits/kernel/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "linear/linear_model/Item/weights/Read/ReadVariableOp"
  input: "linear/linear_model/Item_X_User/weights/Read/ReadVariableOp"
  input: "linear/linear_model/User/weights/Read/ReadVariableOp"
  input: "linear/linear_model/bias_weights/Read/ReadVariableOp"
  input: "training/Adadelta/decay/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/logits/bias/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/logits/bias/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_grad/Read/ReadVariableOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_var/Read/ReadVariableOp"
  input: "training/Adadelta/learning_rate/Read/ReadVariableOp"
  input: "training/Adadelta/rho/Read/ReadVariableOp"
  input: "training/Adagrad/decay/Read/ReadVariableOp"
  input: "training/Adagrad/iter/Read/ReadVariableOp"
  input: "training/Adagrad/learning_rate/Read/ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator/Read/ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator/Read/ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator/Read/ReadVariableOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: "dnn/hiddenlayer_0/batchnorm_0/beta"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/gamma"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
        string_val: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
        string_val: "dnn/hiddenlayer_0/bias"
        string_val: "dnn/hiddenlayer_0/kernel"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/beta"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/gamma"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
        string_val: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
        string_val: "dnn/hiddenlayer_1/bias"
        string_val: "dnn/hiddenlayer_1/kernel"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/beta"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/gamma"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
        string_val: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
        string_val: "dnn/hiddenlayer_2/bias"
        string_val: "dnn/hiddenlayer_2/kernel"
        string_val: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
        string_val: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
        string_val: "dnn/logits/bias"
        string_val: "dnn/logits/kernel"
        string_val: "global_step"
        string_val: "linear/linear_model/Item/weights"
        string_val: "linear/linear_model/Item_X_User/weights"
        string_val: "linear/linear_model/User/weights"
        string_val: "linear/linear_model/bias_weights"
        string_val: "training/Adadelta/decay"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
        string_val: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
        string_val: "training/Adadelta/dnn/logits/bias/accum_grad"
        string_val: "training/Adadelta/dnn/logits/bias/accum_var"
        string_val: "training/Adadelta/dnn/logits/kernel/accum_grad"
        string_val: "training/Adadelta/dnn/logits/kernel/accum_var"
        string_val: "training/Adadelta/learning_rate"
        string_val: "training/Adadelta/rho"
        string_val: "training/Adagrad/decay"
        string_val: "training/Adagrad/iter"
        string_val: "training/Adagrad/learning_rate"
        string_val: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/User/weights/accumulator"
        string_val: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 78
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 78
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/beta"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/gamma"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_mean"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/batchnorm_0/moving_variance"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/bias"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_0/kernel"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/beta"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/gamma"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_mean"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/batchnorm_1/moving_variance"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/bias"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_1/kernel"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/beta"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/gamma"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_mean"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/batchnorm_2/moving_variance"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/bias"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "dnn/hiddenlayer_2/kernel"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "dnn/logits/bias"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "dnn/logits/kernel"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "linear/linear_model/Item/weights"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "linear/linear_model/Item_X_User/weights"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "linear/linear_model/User/weights"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "linear/linear_model/bias_weights"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "training/Adadelta/decay"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_grad"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/beta/accum_var"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_grad"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/batchnorm_0/gamma/accum_var"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_grad"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/bias/accum_var"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_grad"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_0/kernel/accum_var"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_grad"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/beta/accum_var"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_grad"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/batchnorm_1/gamma/accum_var"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_grad"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/bias/accum_var"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_grad"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_1/kernel/accum_var"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_grad"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/beta/accum_var"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_grad"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/batchnorm_2/gamma/accum_var"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_grad"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/bias/accum_var"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_grad"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/hiddenlayer_2/kernel/accum_var"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_grad"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/Item_embedding/embedding_weights/accum_var"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_grad"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/User_embedding/embedding_weights/accum_var"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_grad"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/interest_user_feature_2_embedding/embedding_weights/accum_var"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_grad"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/personality_user_feature_3_embedding/embedding_weights/accum_var"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_grad"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/input_from_feature_columns/input_layer/price_item_feature_2_embedding/embedding_weights/accum_var"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/logits/bias/accum_grad"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/logits/bias/accum_var"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_grad"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "training/Adadelta/dnn/logits/kernel/accum_var"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "training/Adadelta/learning_rate"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "training/Adadelta/rho"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "training/Adagrad/decay"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "training/Adagrad/iter"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "training/Adagrad/learning_rate"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "training/Adagrad/linear/linear_model/Item/weights/accumulator"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "training/Adagrad/linear/linear_model/Item_X_User/weights/accumulator"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "training/Adagrad/linear/linear_model/User/weights/accumulator"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "training/Adagrad/linear/linear_model/bias_weights/accumulator"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "zero_fraction_total_zero_zero_count_2_false_1537"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_user_weights"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_zero_fraction_total_size_size_2"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_user_weights"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 139
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 139
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_1547"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_1546"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_zero_fraction_total_size_size_2"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "dnn_zero_fraction_2_cond_true_1031"
      input_arg {
        name: "count_nonzero_notequal_dnn_hiddenlayer_2_batchnorm_2_batchnorm_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_dnn_hiddenlayer_2_batchnorm_2_batchnorm_add_1"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "count_nonzero/Cast:y:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 512
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_total_zero_zero_count_1_true_1493"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_false_7"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "global_step_initializer_zeros_0"
        type: DT_INT64
      }
      output_arg {
        name: "global_step_initializer_zeros"
        type: DT_INT64
      }
    }
    ret {
      key: "global_step_initializer_zeros"
      value: "global_step_initializer_zeros_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "dnn_zero_fraction_cond_true_765"
      input_arg {
        name: "count_nonzero_notequal_dnn_hiddenlayer_0_batchnorm_0_batchnorm_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_dnn_hiddenlayer_0_batchnorm_0_batchnorm_add_1"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "count_nonzero/Cast:y:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 64
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "dnn_zero_fraction_cond_false_766"
      input_arg {
        name: "count_nonzero_notequal_dnn_hiddenlayer_0_batchnorm_0_batchnorm_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_dnn_hiddenlayer_0_batchnorm_0_batchnorm_add_1"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "count_nonzero/Cast:y:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 64
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_total_zero_zero_count_false_1451"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_item_weights"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_zero_fraction_total_size_size"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_item_weights"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 129
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 129
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_1461"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_1460"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_zero_fraction_total_size_size"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_total_zero_zero_count_true_1450"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "dnn_zero_fraction_3_cond_false_1101"
      input_arg {
        name: "count_nonzero_notequal_dnn_logits_biasadd"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_dnn_logits_biasadd"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "count_nonzero/Cast:y:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_1503"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_1547"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 139
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 139
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 139
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_1_cond_true_1586"
      input_arg {
        name: "count_nonzero_notequal_linear_linear_model_linear_linear_model_linear_linear_model_weighted_sum"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_linear_linear_model_linear_linear_model_linear_linear_model_weighted_sum"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_1460"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 129
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 129
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 129
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_1504"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "dnn_zero_fraction_1_cond_false_899"
      input_arg {
        name: "count_nonzero_notequal_dnn_hiddenlayer_1_batchnorm_1_batchnorm_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_dnn_hiddenlayer_1_batchnorm_1_batchnorm_add_1"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "count_nonzero/Cast:y:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 128
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "dnn_zero_fraction_3_cond_true_1100"
      input_arg {
        name: "count_nonzero_notequal_dnn_logits_biasadd"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_dnn_logits_biasadd"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "count_nonzero/Cast:y:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_1_cond_false_1587"
      input_arg {
        name: "count_nonzero_notequal_linear_linear_model_linear_linear_model_linear_linear_model_weighted_sum"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_linear_linear_model_linear_linear_model_linear_linear_model_weighted_sum"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_total_zero_zero_count_2_true_1536"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    ret {
      key: "const"
      value: "Const:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_true_6"
      input_arg {
        name: "read_readvariableop_global_step"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
    }
    node_def {
      name: "Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "read_readvariableop_global_step"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Read/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "dnn_zero_fraction_2_cond_false_1032"
      input_arg {
        name: "count_nonzero_notequal_dnn_hiddenlayer_2_batchnorm_2_batchnorm_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_dnn_hiddenlayer_2_batchnorm_2_batchnorm_add_1"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "count_nonzero/Cast:y:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 512
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_false_1461"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "count_nonzero_nonzero_count"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 129
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 129
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "count_nonzero_nonzero_count"
      value: "count_nonzero/nonzero_count:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 129
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_total_zero_zero_count_1_false_1494"
      input_arg {
        name: "zero_fraction_readvariableop_linear_linear_model_item_x_user_weights"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tofloat_zero_fraction_total_size_size_1"
        type: DT_INT64
      }
      output_arg {
        name: "mul"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "zero_fraction/ReadVariableOp"
      op: "ReadVariableOp"
      input: "zero_fraction_readvariableop_linear_linear_model_item_x_user_weights"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "zero_fraction/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1000
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2147483647
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/LessEqual"
      op: "LessEqual"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/LessEqual/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond"
      op: "StatelessIf"
      input: "zero_fraction/LessEqual:z:0"
      input: "zero_fraction/ReadVariableOp:value:0"
      attr {
        key: "Tcond"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tin"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "else_branch"
        value {
          func {
            name: "zero_fraction_cond_false_1504"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "then_branch"
        value {
          func {
            name: "zero_fraction_cond_true_1503"
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/cond/Identity"
      op: "Identity"
      input: "zero_fraction/cond:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/sub"
      op: "Sub"
      input: "zero_fraction/Size:output:0"
      input: "zero_fraction/cond/Identity:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast"
      op: "Cast"
      input: "zero_fraction/counts_to_fraction/sub:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/Cast_1"
      op: "Cast"
      input: "zero_fraction/Size:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/counts_to_fraction/truediv"
      op: "RealDiv"
      input: "zero_fraction/counts_to_fraction/Cast:y:0"
      input: "zero_fraction/counts_to_fraction/Cast_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "zero_fraction/fraction"
      op: "Identity"
      input: "zero_fraction/counts_to_fraction/truediv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ToFloat"
      op: "Cast"
      input: "tofloat_zero_fraction_total_size_size_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "mul_0"
      op: "Mul"
      input: "zero_fraction/fraction:output:0"
      input: "ToFloat:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "mul"
      value: "mul_0:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
    arg_attr {
      key: 1
      value {
      }
    }
  }
  function {
    signature {
      name: "dnn_zero_fraction_1_cond_true_898"
      input_arg {
        name: "count_nonzero_notequal_dnn_hiddenlayer_1_batchnorm_1_batchnorm_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_4"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_dnn_hiddenlayer_1_batchnorm_1_batchnorm_add_1"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "count_nonzero/Cast:y:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_3"
      op: "OptionalFromValue"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "OptionalFromValue_4"
      op: "OptionalFromValue"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    ret {
      key: "optionalfromvalue_3"
      value: "OptionalFromValue_3:optional:0"
    }
    ret {
      key: "optionalfromvalue_4"
      value: "OptionalFromValue_4:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 128
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
  function {
    signature {
      name: "zero_fraction_cond_true_1546"
      input_arg {
        name: "count_nonzero_notequal_zero_fraction_readvariableop"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT64
      }
    }
    node_def {
      name: "count_nonzero/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/NotEqual"
      op: "NotEqual"
      input: "count_nonzero_notequal_zero_fraction_readvariableop"
      input: "count_nonzero/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 139
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "count_nonzero/Cast"
      op: "Cast"
      input: "count_nonzero/NotEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 139
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "count_nonzero/nonzero_count"
      op: "Sum"
      input: "count_nonzero/Cast:y:0"
      input: "count_nonzero/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "count_nonzero/nonzero_count:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: 139
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    arg_attr {
      value {
      }
    }
  }
}
versions {
  producer: 119
  min_consumer: 12
}
